<?php
namespace p4it\sentry;

use Sentry\ClientBuilder;
use Sentry\Severity;
use Sentry\State\Hub;
use Sentry\State\Scope;
use Sentry\Transport\NullTransport;
use yii\base\Component;
use yii\base\InvalidConfigException;

class
SentryComponent extends Component
{
    public const NULL_TRANSPORT = 'nullTransport';

    /**
     * @var string Sentry client key.
     */
    public $dns;

    /**
     * @var string $transportMode
     */
    public $transportMode;

    /**
     *
     */
    public function init()
    {

        $options = [
            'dsn' => $this->dns,
        ];

        $builder = ClientBuilder::create($options);
        if($this->transportMode) {
            $transport = $this->{$this->transportMode}($options);
            $builder->setTransport($transport);
        }

        Hub::setCurrent(new Hub($builder->getClient()));

        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @param $options
     * @return NullTransport
     */
    protected function nullTransport($options): NullTransport
    {
        return new NullTransport();
    }

    /**
     * @param \Throwable $exception
     * @param Scope|null $scope
     * @return string|null
     * @throws InvalidConfigException
     */
    public function captureException(\Throwable $exception, ?Scope $scope = null): ?string
    {
        $client = Hub::getCurrent()->getClient();

        if(!$client) {
            throw new InvalidConfigException('Client setup is missing');
        }

        return $client->captureException($exception, $scope);
    }

    /**
     * @param string $message
     * @param Severity|null $level
     * @param Scope|null $scope
     * @return string|null
     * @throws InvalidConfigException
     */
    public function captureMessage(string $message, ?Severity $level = null, ?Scope $scope = null): ?string
    {
        $client = Hub::getCurrent()->getClient();

        if(!$client) {
            throw new InvalidConfigException('Client setup is missing');
        }

        return $client->captureMessage($message, $level, $scope);
    }
}